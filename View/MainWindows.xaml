<Window
    x:Class="RevitElementBipChecker.View.MainWindows"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="Revit Element Bip Checker"
    Width="Auto"
    Height="Auto"
    MinWidth="500"
    MinHeight="420"
    d:DesignHeight="450"
    d:DesignWidth="800"
    PreviewKeyDown="HandleEsc"
    ResizeMode="CanResize"
    mc:Ignorable="d">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="120" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="25" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="1" Grid.Column="0">
            <Button
                Margin="5,5,5,5"
                Command="{Binding OpenExcel}"
                Content="Open In Excel"
                ToolTip="Save data csv format to path document" />
            <Button
                Margin="5,5,5,5"
                Command="{Binding OpenJson}"
                Content="Open In Json"
                ToolTip="Save Data json format to path document" />
            <Button
                Margin="5,5,5,5"
                Command="{Binding SnoopElement}"
                Content="Snoop" />
            <TextBox
                Margin="5,5,5,5"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Text="{Binding Element.Name}"
                ToolTip="Element Id" />
            <TextBox
                Margin="5,5,5,5"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Text="{Binding Category}"
                ToolTip="Category Of Element" />
            <TextBox
                Margin="5,5,5,5"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Text="{Binding Name}"
                ToolTip="Element Name" />
            <GroupBox Header="State Check">
                <Label
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Content="{Binding State}"
                    Foreground="Red" />
            </GroupBox>
            <GroupBox Height="80" Header="Show Filter">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <CheckBox
                        Margin="5,0,0,5"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Content="Instance"
                        Command="{Binding CheckTypeInstance}"
                        IsChecked="{Binding IsInstance, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <CheckBox
                        Grid.Row="1"
                        Margin="5,0,0,5"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Content="Type"
                        Command="{Binding CheckTypeInstance}"
                        IsChecked="{Binding IsType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </Grid>

            </GroupBox>

            <Button Click="AboutOnClick" Content="About" />
        </StackPanel>
        <DataGrid
            Name="lsBipChecker"
            Grid.Row="1"
            Grid.Column="1"
            Margin="10"
            IsReadOnly="True"
            AlternatingRowBackground="Transparent"
            AlternationCount="2"
            AutoGenerateColumns="False"
            GridViewColumnHeader.Click="GridViewColumnHeaderClickedHandler"
            ItemsSource="{Binding Data}"
            ScrollViewer.HorizontalScrollBarVisibility="Visible"
            ScrollViewer.VerticalScrollBarVisibility="Visible">
            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridCell}">
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                        <Condition Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource AncestorType=DataGrid}}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                        <Condition Binding="{Binding ContextMenu.IsOpen, RelativeSource={RelativeSource AncestorType=DataGrid}}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header = "Name" Binding = "{Binding ParameterName}" /> 
                <DataGridTextColumn Header = "Id" Binding = "{Binding Id}" /> 
                <DataGridTextColumn Header = "TypeOrInstance" Binding = "{Binding TypeOrInstance}" /> 
                <DataGridTextColumn Header = "BuiltInParameter" Binding = "{Binding BuiltInParameter}" /> 
                <DataGridTextColumn Header = "ParameterType" Binding = "{Binding ParameterType}" /> 
                <DataGridTextColumn Header = "Type" Binding = "{Binding Type}" /> 
                <DataGridTextColumn Header = "ReadWrite" Binding = "{Binding ReadWrite}" /> 
                <DataGridTextColumn Header = "Value" Binding = "{Binding Value}" /> 
                <DataGridTextColumn Header = "StringValue" Binding = "{Binding StringValue}" /> 
                <DataGridTextColumn Header = "ParameterGroup" Binding = "{Binding ParameterGroup}" /> 
                <DataGridTextColumn Header = "GroupName" Binding = "{Binding GroupName}" /> 
                <DataGridTextColumn Header = "Shared" Binding = "{Binding Shared}" /> 
                <DataGridTextColumn Header = "GUID" Binding = "{Binding GUID}" />  
                <DataGridTextColumn Header = "AssGlobalPara" Binding = "{Binding AssGlobalPara}" />  
                <DataGridTextColumn Header = "AssGlobalParaValue" Binding = "{Binding AssGlobalParaValue}" />  
            </DataGrid.Columns>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Command="{Binding Copy}" CommandParameter="PraName"  Header="Copy ParameterName" />
                    <MenuItem Command="{Binding Copy}" CommandParameter="BuildIn" Header="Copy BuiltInParameter" />
                    <MenuItem Command="{Binding Copy}" CommandParameter="Type" Header="Copy Type" />
                    <MenuItem Command="{Binding Copy}" CommandParameter="Value" Header="Copy Value" />
                    <MenuItem Command="{Binding Copy}" CommandParameter="PraGroup" Header="Copy ParameterGroup" />
                    <MenuItem Command="{Binding Copy}" CommandParameter="GName" Header="Copy GroupName" />
                    <MenuItem Command="{Binding Copy}" CommandParameter="GUID" Header="Copy GUID" />
                </ContextMenu>
            </DataGrid.ContextMenu>

        </DataGrid>
        <TextBox
            x:Name="tbxSeach"
            Grid.Row="0"
            Grid.Column="1"
            Margin="10,0,10,0"
            Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
            TextAlignment="Left">
            <TextBox.Resources>
                <VisualBrush
                    x:Key="hinttext"
                    AlignmentX="Left"
                    Stretch="None"
                    TileMode="None">
                    <VisualBrush.Visual>
                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontStyle="Normal"
                            Foreground="#959595"
                            Text="Search Filter By Parameter Name" />
                    </VisualBrush.Visual>
                </VisualBrush>
            </TextBox.Resources>
            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="FontSize" Value="12" />
                    <Setter Property="BorderBrush" Value="AliceBlue" />
                    <Setter Property="Background" Value="Transparent" />
                    <Style.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter Property="Background" Value="{StaticResource hinttext}" />
                        </Trigger>

                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="Background" Value="{StaticResource hinttext}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
    </Grid>
</Window>
